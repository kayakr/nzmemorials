<?php
/**
 * @file
 * Code for the The Sorrow And The Pride (TSATP) feature.
 */

include_once 'the_sorrow_and_the_pride.features.inc';


/**
 * Implements hook_menu().
 */
function the_sorrow_and_the_pride_menu() {
  $items = array();

  $items['home'] = array(
    'title' => 'The Sorrow And The Pride',
    'page callback' => 'the_sorrow_and_the_pride_home',
    'access callback' => TRUE,
  );

  return $items;
}

function the_sorrow_and_the_pride_home() {
  $output = '<p><em>Finding the people behind the names on Aotearoa New Zealand war memorials.</em></p>';

  $output .= '<div class="col-md-6 intro-text">';
  $output .= '<p>Help us identify the men and women memorialised.</p>';

  $readable_text_total = the_sorrow_and_the_pride_task_readable_text_total();
  $readable_text_done = the_sorrow_and_the_pride_task_readable_text_status('yes') +
    the_sorrow_and_the_pride_task_readable_text_status('no');

  $output .= '<h2>Task: Readable text?</h2>';

  $output .= t('<p>@done of @total photos assessed. !task</p>', array(
    '@done' => $readable_text_done,
    '@total' => $readable_text_total,
    '!task' => $readable_text_done == $readable_text_total ? '' : '<a href="/task/readable-text">Check photos for readable text</a>.'
  ));

  // Transcribe task.
  // Photos that have readable text, but transcription is not complete.
  $transcribe_done = the_sorrow_and_the_pride_task_transcribe_status('done');
  $transcribe_total = the_sorrow_and_the_pride_task_transcribe_status();

  $output .= '<h2>Task: Transcribe text</h2>';
  $output .= t('<p>@done of @total photos transcribed. !task</p>', array(
    '@done' => isset($transcribe_done) ? $transcribe_done : 0,
    '@total' => $transcribe_total,
    '!task' => $transcribe_done == $transcribe_total ? '' : '<a href="/task/transcribe">Transcribe text from photos</a>.',
  ));

  $extract_names_done = the_sorrow_and_the_pride_task_extract_names_status('done');
  $extract_names_total = the_sorrow_and_the_pride_task_extract_names_status();

  $output .= '<h2>Task: Extract names</h2>';
  $output .= t('<p>@done of @total transcriptions with names extracted. !task</p>', array(
    '@done' => isset($extract_names_done) ? $extract_names_done : 0,
    '@total' => $extract_names_total,
    '!task' => $extract_names_done == $extract_names_total ? '' : '<a href="/task/extract-names">Extract names from text</a>.',
  ));

  $output .= '<h2>Task: Match names</h2>';
  $output .= '<p>Match names to Cenotaph records... TBD.</p>';

  $output .= '<h2>Next steps</h2>';
  $output .= '<p>We hope to add an interactive, mobile-friendly map, and an HTTP API for memorial and name data. Check back soon.</p>';

  $output .= '</div>';

  $path = drupal_get_path('module', 'the_sorrow_and_the_pride');
  $output .= '<div class="col-md-6"><img class="img-responsive" src="/' . $path . '/IMG_5125.JPG"/><br/>
  <span class="caption">Photo: Lyttelton war memorial, J. Hunt.</span></div>';


  return $output;
}

/**
 * Report status of Task: Readable Text.
 */
function the_sorrow_and_the_pride_task_readable_text_status($value = 'yes') {
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'file')
    ->entityCondition('bundle', 'image')
    //->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_readable_text', 'value', $value, '=');

  $result = $query->execute();

  if (isset($result['file'])) {
    $image_fids = array_keys($result['file']);
    return count($image_fids);
  }
}

/**
 * Count all memorial images.
 * @todo Maybe we'll need to not count some images...
 *  e.g. only count images in 'memorial/' path.
 *
 * @return int
 */
function the_sorrow_and_the_pride_task_readable_text_total() {
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'file')
    ->entityCondition('bundle', 'image');

  $result = $query->execute();

  if (isset($result['file'])) {
    $image_fids = array_keys($result['file']);
    return count($image_fids);
  }
}

function the_sorrow_and_the_pride_task_transcribe_status($status = 'total') {
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'file')
    ->entityCondition('bundle', 'image')
    //->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_readable_text', 'value', 'yes', '=');

  if ($status != 'total') { // assume done, but none=N/A
    $query->fieldCondition('field_transcription_status', 'value', 'NULL', '!=');
  }

  $result = $query->execute();

  if (isset($result['file'])) {
    $image_fids = array_keys($result['file']);
    return count($image_fids);
  }
}

function the_sorrow_and_the_pride_task_extract_names_status($status = 'total') {
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'file')
    ->entityCondition('bundle', 'image')
    //->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_transcription_status', 'value', 'transcribe_names_yes', '=');

  if ($status != 'total') {
    $query->fieldCondition('field_extract_names_complete', 'value', true, '=');
  }

  $result = $query->execute();

  if (isset($result['file'])) {
    $image_fids = array_keys($result['file']);
    return count($image_fids);
  }
}

/**
 * Implements hook_block_info().
 */
function the_sorrow_and_the_pride_block_info() {

  $blocks['tsatp_copyright'] = array(
    'info' => t('TSATP copyright (the_sorrow_and_the_pride.module)'),
  );

  $blocks['tsatp_footer'] = array(
    'info' => t('TSATP footer (the_sorrow_and_the_pride.module)'),
    // DRUPAL_CACHE_PER_ROLE will be assumed.
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function the_sorrow_and_the_pride_block_view($delta = '') {
  switch ($delta) {
    case 'tsatp_copyright':
      $block['subject'] = '';
      $block['content'] = '
<p>\'Memorials register\', URL: <a href="https://nzhistory.govt.nz/culture/the-memorials-register">https://nzhistory.govt.nz/culture/the-memorials-register</a>, (Ministry for Culture and Heritage), updated 30-Jun-2016.<br/>
Memorial photos are generally extracted from <a href="http://www.nzhistory.net.nz/">http://www.nzhistory.net.nz</a> and attribution should be checked there.<br/>
<span xmlns:dct="http://purl.org/dc/terms/">Transcription content entered on this site is Public Domain
<a rel="license" href="http://creativecommons.org/publicdomain/mark/1.0/">
  <img src="http://i.creativecommons.org/p/mark/1.0/88x31.png" style="border-style: none;" alt="Public Domain Mark" />
</a></span></p>';
      return $block;

    case 'tsatp_footer':
      $block['subject'] = '';
      $block['content'] = '<p>A project by team <a href="http://2016.hackerspace.govhack.org/content/tabula-rasa-tsatp">Tabula Rasa</a> for GovHackNZ, July 2016. Code and background at <a href="https://github.com/kayakr/nzmemorials">https://github.com/kayakr/nzmemorials</a>.</a></p>
        <p><em>The Sorrow And The Pride</em> is an homage to <em><a href="https://www.amazon.com/sorrow-pride-New-Zealand-memorials/dp/0477014755">The Sorrow And The Pride: New Zealand War Memorials</a></em> by Chris Maclean and Jock Philips.</p><br/>';
      return $block;
  }
}
